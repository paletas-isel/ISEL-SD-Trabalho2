<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    
    <system.serviceModel>
        <bindings>
          <wsDualHttpBinding>
            <binding name="DuplexChannelBinding">
              <security mode="None"/>
            </binding>
            <binding name="WSDualHttpBinding_ICentralService" closeTimeout="00:10:00"
          openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00"
          bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
          maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
          messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true">
              <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                  maxBytesPerRead="4096" maxNameTableCharCount="16384" />
              <reliableSession ordered="true" inactivityTimeout="00:10:00" />
              <security mode="Message">
                <message clientCredentialType="Windows" negotiateServiceCredential="true"
                    algorithmSuite="Default" />
              </security>
            </binding>
            <binding name="WSDualHttpBinding_IChatService" closeTimeout="00:10:00"
                openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00"
                bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
                maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
                messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true">
              <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                  maxBytesPerRead="4096" maxNameTableCharCount="16384" />
              <reliableSession ordered="true" inactivityTimeout="00:10:00" />
              <security mode="Message">
                <message clientCredentialType="Windows" negotiateServiceCredential="true"
                    algorithmSuite="Default" />
              </security>
            </binding>
          </wsDualHttpBinding>
        </bindings>
      
        <behaviors>
          <serviceBehaviors>
            <behavior name="MetadataBehavior">
              <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
              <serviceMetadata httpGetEnabled="true"/>
              <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
              <serviceDebug includeExceptionDetailInFaults="true"/>
            </behavior>
          </serviceBehaviors>
        </behaviors>
      
        <services>
          
          <service name="ChatServiceProject.ChatService" behaviorConfiguration="MetadataBehavior">

            <host>
              <baseAddresses>
                <add baseAddress="http://localhost:8001/ChatService/"/>
              </baseAddresses>
            </host>

            <endpoint address="" binding="wsDualHttpBinding" contract="ChatServiceProject.IChatService"/>

            <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>

          </service>

        </services>

      <client>
        <endpoint address="http://localhost:8000/CentralService/" binding="wsDualHttpBinding"
            bindingConfiguration="WSDualHttpBinding_ICentralService" contract="Tracker.ICentralService"
            name="WSDualHttpBinding_ICentralService">
          <identity>
            <userPrincipalName value="JOAO-PC\João" />
          </identity>
        </endpoint>
        <!--<endpoint address="http://localhost:8001/ChatService/" binding="wsDualHttpBinding"
            bindingConfiguration="WSDualHttpBinding_IChatService" contract="ChatServiceRemote.IChatService"
            name="WSDualHttpBinding_IChatService">
          <identity>
            <userPrincipalName value="JOAO-PC\João" />
          </identity>
        </endpoint>-->
      </client>
    </system.serviceModel>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel"
              switchValue="Error, Critical"
              propagateActivity="true">
        <listeners>
          <add name="traceListener"
              type="System.Diagnostics.XmlWriterTraceListener"
              initializeData= "c:\WCF_Errors.svclog" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
</configuration>